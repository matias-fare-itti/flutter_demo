# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.


name: Generacion de APK

concurrency:
  group: $-$
  cancel-in-progress: true
on:
  workflow_dispatch:
    inputs:
      comments:
        description: 'Comments'
        required: true
        default: 'Manual build Actions'
jobs:
  build:
    runs-on: ubuntu-latest
    #environment: Staging # Se puedeb serpara los vars y secrets or enviroments
    name: Generacion de APK para android
    env:
        AAB_PATH: build/app/outputs/flutter-apk/app-demo-release.apk
        #KEYSTORE_PATH: android/app.jks
        #KEY_PROPS_PATH: android/key.properties
    steps:  
      # Setup Java in the VM
      - name: Setup Java to compile the Android project
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: ${{ vars.JAVA_VERSION }}

      # Setup Flutter in the VM
      - name: Clone repository
        uses: actions/checkout@v4      

      - name: Flutter action
        uses: subosito/flutter-action@v2.16.0
        with:
          flutter-version: ${{ vars.FLUTTER_VERSION }}
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:'
      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .flutter-plugins-dependencies
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-
        # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
          # Decode Android env variables
      # - name: Decode Android keystore
      #   run: echo "${{ secrets.ANDROID_KEY_STORE }}" | base64 --decode > ${{ env.KEYSTORE_PATH }}

      # - name: Decode Android key properties
      #   run: echo "${{ secrets.ANDROID_KEY_PROPERTIES }}" | base64 --decode > ${{ env.KEY_PROPS_PATH }}

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: ⚙️ Generate freezed and injectable
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Generate l18n language
        run: flutter gen-l10n

      # Build Android Bundle release file
      - name: 🔨 Build Apk Android
        run: |
          flutter build apk --release --flavor demo  --target lib/main.dart
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact
          path: ${{ env.AAB_PATH }}

  upload-android-ios:
    if: always()
    needs: [build]
    runs-on: ubuntu-latest
    environment: Staging
    name: Upload Firebase
    steps:

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: artifact